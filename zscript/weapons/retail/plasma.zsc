class UnloadedPlasmaRifle : UnloadedWeapon
{
	default
	{
		Obituary "You ejected the cells from a Plasma Rifle.";
	}
}

class skp_PlasmaRifle  : skp_Weapon replaces PlasmaRifle 
{
	Default
	{
		Weapon.Slotnumber 6;
		
		Weapon.SelectionOrder 100;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 40;
		Weapon.AmmoType "Cell";
		Inventory.PickupMessage "$GOTPLASMA";
		Tag "$TAG_PLASMARIFLE";
		DropItem "UnloadedPlasmaRifle";
		Dropitem "$vend_plasma", VEND_DESC;
		//Weapon.SisterWeapon "skp_Incinerator";
	}
	States
	{
	Ready:
		BPIH A 0 A_StartSound("weapons/plasmaidle", CHAN_WEAPON, CHANF_OVERLAP|CHANF_LOOPING, 0.5, ATTN_STATIC);
		BPIH BBCCDDEE 1 Bright skp_WeaponReady();
		Loop;
	Deselect:
		BPIH A 1 skp_LowerPlas();
		Loop;
	Select:
		BPIH A 1 skp_Raise();
		Loop;
	Fire:
		BPFR A 0
		{
			if(CountInv("skp_PlasmaHeat") > 16)
			{
				//player.SetPsprite(PSP_WEAPON, player.ReadyWeapon.FindState(flash));
			}
		}
		BPFR A 2 Bright skp_ShootPlasma();
		BPFR B 1 Bright
		{
			A_OverlayOffset(1,0+random(-1,1),32);
			A_ZoomFactor(0.99);
			A_Light(Random(1,2));
			A_ZoomFactor(1);
		}
		BPFR H 0 A_Refire();
		
		PGRC Z 1 Bright
		{
			skp_SawQuickFire("User1",BT_USER1);
			A_OverlayOffset(1,0+16,32);
			let pspr = player.GetPSprite(PSP_WEAPON);
			pspr.valign = PSPA_BOTTOM;//setting these with the action function wasn't working, easier to set them like this anyway
			pspr.halign = PSPA_LEFT;
			A_OverlayScale(PSP_WEAPON, 1.3, 1);//the sprite looked weird and skinny so we just stretch it here
			A_OverlayRotate(PSP_WEAPON, -22.5);
		}
		PGRC Z 1 Bright
		{
			skp_SawQuickFire("User1",BT_USER1);
			A_OverlayOffset(1,0+8,32);
			A_OverlayScale(PSP_WEAPON, 1.3, 1);
			A_OverlayRotate(PSP_WEAPON, -11.25);
		}
		PGRC ZZZZZZZZZZZZZZ 1 Bright
		{
			skp_SawQuickFire("User1",BT_USER1);
			A_OverlayOffset(1,0,32);
			A_OverlayScale(PSP_WEAPON, 1.3, 1);
			A_OverlayRotate(PSP_WEAPON, 0);
		}
		PGRC Z 1 Bright
		{
			skp_SawQuickFire("User1",BT_USER1);
			A_OverlayOffset(1,0+8,32);
			A_OverlayScale(PSP_WEAPON, 1.3, 1);
			A_OverlayRotate(PSP_WEAPON, -11.25);
		}
		PGRC Z 1 Bright
		{
			skp_SawQuickFire("User1",BT_USER1);
			A_OverlayOffset(1,0+16,32);
			A_OverlayScale(PSP_WEAPON, 1.3, 1);
			A_OverlayRotate(PSP_WEAPON, -22.5);
		}
		BPIH A 1 Bright
		{
			skp_SawQuickFire("User1",BT_USER1);
			A_OverlayOffset(1,0,32);
			A_OverlayScale(PSP_WEAPON, 1, 1);
			A_OverlayRotate(PSP_WEAPON, 0);
		}
		BPIH AA 1 Bright
		{
			A_OverlayOffset(1,0+3,32+3);
			A_Refire();
		}
		BPIH A 1 Bright
		{
			A_OverlayOffset(1,0+1,32+1);
			A_Refire();
		}
		BPIH A 1 Bright
		{
			A_OverlayOffset(1,0,32);
			A_Refire();
		}
		Goto Ready;
	Spawn:
		WPRF A -1;
		Stop;
	}
	Action void skp_ShootPlasma()
	{
		A_GiveInventory("skp_PlasmaHeat", 1);
		A_Light(Random(3,4));
		A_OverlayOffset(1,0+random(-2,2), 32);
		//Players[consoleplayer].psprites.frame = random(random(5,6),random(8,9));
		A_FireProjectile("PlasmaBall");
		A_ZoomFactor(0.995);
		
		let pspr = player.GetPSprite(PSP_WEAPON);
		pspr.valign = PSPA_TOP;//setting these with the action function wasn't working, easier to set them like this anyway
		pspr.halign = PSPA_CENTER;
		A_OverlayScale(PSP_WEAPON, frandom(1.18,1.14));
	}
	Action void skp_LowerPlas()
	{
		A_StopSound(CHAN_WEAPON);
		skp_lower();
	}
}

class skp_PlasmaHeat : inventory
{
}

class skp_PlasmaBall : PlasmaBall replaces PlasmaBall
{
	Default
	{
		DamageType "Plasma";
		Decal "PlasmaScorch";
		Speed 25;
		Damage 5;
		+NOEXTREMEDEATH
		+ROLLCENTER
		+ROLLSPRITE
	}
States
	{
	Spawn:
		PLSS AB 6 Bright;
		Loop;
	Death:
		TNT1 A 0
		{
			A_SpawnItemEx("RocketSmokeTrail",0,0,-4,0,0,fRandom(1,2),0,0);
			A_SetScale(1);
		}
		PLSE ABCDE 4 Bright
			{
				A_SetRoll(CallACS("CVarCheck",2) ? Random(0,359) : 0);
				A_SpawnParticle("CCCCFF",SPF_FULLBRIGHT,random(8,16),random(1,2),0,frandom(1,-1),frandom(1,-1),frandom(1,-1),frandom(1,-1),frandom(1,-1),frandom(1,-1));
			}
		Stop;
	}
	Override void PostBeginPlay()
	{
		A_SpriteOffset(frandom(-1,1),frandom(-1,1));
		A_SetScale(fRandom(1.1,0.9));
		roll += CallACS("CVarCheck",2) ? random(0,1) * 45 : 0;
		Super.PostBeginPlay();
	}
	override int DoSpecialDamage(Actor victim, int damage, Name damagetype)
	{
		if(victim)
			victim.A_GiveInventory("RocketSchorcher", 1);
		
		return Super.DoSpecialDamage(victim, damage, damagetype);
	}
}
class skp_PlasmaBallTrail : actor
{
	Default
	{
		+NOINTERACTION
		+NOGRAVITY
		+NOBLOCKMAP
		renderstyle "add";
		alpha 0.4;
	}
	States
	{
	Spawn:
		PTRA Z 1;
		PTRA AB 3 Bright;
		PTRA C 2 Bright;
		PTRA C 1 Bright A_Fadeout();
		Wait;
	}
}