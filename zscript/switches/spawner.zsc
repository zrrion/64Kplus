class skp_EnemySpawner : actor
{
	bool user_RadRespawn;
	static const string MOBJ_TYPES_RETAIL[] = 
	{
		"NULL",
		"ZombieMan",
		"ShotgunGuy",
		"DoomImp",
		"Demon",
		"Spectre",
		"LostSoul",
		"ChaingunGuy",
		"Cacodemon",
		"PainElemental",
		"Revenant",
		"Fatso",
		"Arachnotron",
		"Archvile",
		"HellKnight",
		"BaronOfHell",
		"Cyberdemon",
		"SpiderMastermind",
		"WolfensteinSS",
		"ExplosiveBarrel",
		"skp_Ghoul"
	};

	static const string MOBJ_TYPES_SKP[] = 
	{
		"NULL",
		"DemonDog",
		"Shadow",
		"ZombieSS",
		"Cacomera",
		"GoreNest"
	};
	string user_SpawnType;
	actor YerDude;
	default
	{
		//$Category Actions
		//$title "Enemy Spawner"
        //$Arg0 "Enemy Spawn Type (retail)"
        //$Arg0Type 11
        //$Arg0Enum { 0 = "None"; 1 = "Zombie Man"; 2 = "Shotgun Guy"; 3 = "Imp"; 4 = "Demon"; 5 = "Spectre"; 6 = "Lost Soul"; 7 = "Chaingun Guy"; 8 = "Cacodemon"; 9 = "Pain Elemental"; 10 = "Revenant"; 11 = "Mancubus"; 12 = "Arachnotron"; 13 = "Archvile"; 14 = "Hell Knight"; 15 = "Baron of Hell"; 16 = "Cyberdemon"; 17 = "Spider Mastermind"; 18 = "Wolfenstein SS"; 19 = "Explosive Barrel"; 20 = "Goul";}
        //$Arg0Default 0

		//$Arg1 "Enemy Spawn Type (64K+)"
        //$Arg1Type 11
        //$Arg1Enum { 0 = "None"; 1 = "Demon Dog"; 2 = "Shadow"; 3 = "Retro Zombie"; 4 = "Cacomera"; 5 = "Gore Nest";}
        //$Arg1Default 0

		//$Arg2 "Spawn Style"
        //$Arg2Type 11
        //$Arg2Enum { 0 = "Teleport"; 1 = "Fake Instant floor"; 2 = "silent";}
        //$Arg2Default 0

		//$Arg3 "Special Activation"
        //$Arg3Type 11
        //$Arg3Enum { 0 = "once on thing spawn"; 1 = "once on thing death"; 2 = "every thing spawn"; 3 = "every thing death";}
        //$Arg3Default 1
		
		//$Arg4 "Action tid"
        //$Arg4Type 14
        //$Arg4Default 0
		+INVISIBLE;
	}
	Virtual string SpawnWhat()
	{
		args[0] %= 21;
		args[1] %= 6;
		if(user_SpawnType.CodePointCount())
			return user_SpawnType;
		else if(args[1])
			return MOBJ_TYPES_SKP[args[1]];
		else
			return MOBJ_TYPES_RETAIL[args[0]];
		return "";
	}
	Override void Activate(Actor activator)
	{
		string MobjToSpawn = SpawnWhat();
		if(LorWeapons && MobjToSpawn == "skp_PlasmaOffer")
			MobjToSpawn = "skp_IncOffer";
		if(MobjToSpawn == "NULL" || MobjToSpawn == "")
			return;
		let YD = spawn(MobjToSpawn, self.pos, ALLOW_REPLACE);
		if(YD)
		{
			YerDude = YD;
			if(RadSuit(YerDude) && !user_RadRespawn)
				RadSuit(YerDude).bALWAYSRESPAWN = false;
			YerDude.Angle = self.angle;
			if(args[2] == 0)
				spawn("TeleportFog", self.pos, ALLOW_REPLACE);
			if(args[2] == 1)
			{
				if(GetAge() % 3 == 0)
					YerDude.SpriteOffset.Y += YerDude.height * 0.25;
				else if(GetAge() % 2 == 0)
					YerDude.SpriteOffset.Y += YerDude.height * 0.5;
				else
					YerDude.SpriteOffset.Y += YerDude.height * 0.75;
				self.bSUMMONEDMONSTER = true;
				A_StartSound("plats/pt1_stop");
			}

			if(args[4])
			{
				if(args[3] == 0)
				{
					A_CallSpecial(130, self.args[4], 0, 0, 0, 0);
					self.args[4] = 0;
				}
				if(args[3] == 1)
				{
					YerDude.special = 130;
					YerDude.args[0] = self.args[4];
					self.args[4] = 0;
				}
				if(args[3] == 2)
				{
					A_CallSpecial(130, self.args[4], 0, 0, 0, 0);
				}
				if(args[3] == 3)
				{
					YerDude.special = 130;
					YerDude.args[0] = self.args[4];
				}
			}
			YerDude.bDROPPED = false;
			Yerdude.bAMBUSH = self.bAMBUSH;
		}
	}
	Override void Deactivate(Actor activator)
	{
		if(!activator)
			return;
		super.Activate(activator);
	}
	Override Void Tick()
	{
		if(bSUMMONEDMONSTER && !IsFrozen() && YerDude && YerDude.GetAge() > 0)
		{
			YerDude.SpriteOffset.Y = 0;
			self.bSUMMONEDMONSTER = false;
			self.YerDude = NULL;
		}
		super.Tick();
	}
	states
	{
		spawn:
		activate:
		deactivate:
			ACTN H 1;
			wait;
	}
}

class skp_ItemSpawner : skp_EnemySpawner
{
	static const string ITEM_TYPES_RETAIL[] = 
	{
		"NULL",
		"HealthBonus",//health
		"Stimpack",
		"Medikit",
		"ArmorBonus",//armor
		"GreenArmor",
		"BlueArmor",
		"Clip",//ammo
		"ClipBox",
		"Shell",
		"ShellBox",
		"RocketAmmo",
		"RocketBox",
		"Cell",
		"CellPack",
		"Backpack",
		"Chainsaw",//weapons
		"Pistol",
		"Shotgun",
		"SuperShotgun",
		"Chaingun",
		"RocketLauncher",
		"PlasmaRifle",
		"BFG9000",
		"BlueCard",//keys
		"RedCard",
		"YellowCard",
		"BlueSkull",
		"RedSkull",
		"YellowSkull",
		"Allmap",//powerups
		"Berserk",
		"BlurSphere",
		"Infrared",
		"InvulnerabilitySphere",
		"Megasphere",
		"SoulSphere",
		"RadSuit"//37
	};

	static const string ITEM_TYPES_SKP[] = 
	{
		"NULL",
		"MiniStimpack",//health
		"SKP_HealthMegaBonus",
		"SKP_GreenBoots",//armor
		"SKP_RedArmor",
		"skp_SawFuel",//ammo
		"skp_unmaker",//weapons
		"skp_GreenSkull",//keys
		"PurpleCard",
		"SKP_JumpBoots",//powerups
		"SKP_JumpBoots_Perm",//10
		"skp_PlasmaOffer"
	};
	default
	{
		//$Category Actions
		//$title "Item Spawner"
        //$Arg0 "Item Spawn Type (retail)"
        //$Arg0Type 11
        //$Arg0Enum { 0 = "None"; 1 = "Health bonus"; 2 = "Stimpack"; 3 = "Medikit"; 4 = "Armor Bonus"; 5 = "Green Armor"; 6 = "Blue Armor"; 7 = "Clip"; 8 = "Clip Box"; 9 = "Shells"; 10 = "Shell Box"; 11 = "Rocket"; 12 = "Rocket Box"; 13 = "Cells"; 14 = "CellPack"; 15 = "Backpack"; 16 = "Chainsaw"; 17 = "Pistol"; 18 = "Shotgun"; 19 = "Super Shotgun"; 20 = "Chaingun"; 21 = "Rocket Launcher"; 22 = "Plasma Rifle" ; 23 = "BFG 9000"; 24 = "Blue Keycard"; 25  = "Red Keycard"; 26 = "Yellow Keycard"; 27 = "Blue Skull Key"; 28 = "Red Skull Key"; 29 = "Yellow Skull Key"; 30 = "Area Map"; 31 = "Berserk Pack"; 32 = "Blur Sphere"; 33 = "Light Amp. Goggles"; 34 = "Invulnerability Sphere"; 35 = "Megasphere"; 36 = "Soul Sphere"; 37 = "Radiation Suit";}
        //$Arg0Default 0

		//$Arg1 "Item Spawn Type (64K+)"
        //$Arg1Type 11
        //$Arg1Enum { 0 = "None"; 1 = "Mini Stimpack"; 2 = "Large Health Bonus"; 3 = "Green Boots"; 4 = "Red Armor"; 5 = "Chainsaw Fuel"; 6 = "Unmaker"; 7 = "Green Skull Key"; 8 = "Purple Keycard"; 9 = "Double-Jump Boots (end of map/hub)"; 10 = "Double-Jump Boots (permanent)"; 11 = "Plasma Offer"; 12 = "Incinerator Offer";}
        //$Arg1Default 0

		//$Arg2 "Spawn Style"
        //$Arg2Type 11
        //$Arg2Enum { 0 = "Teleport"; 1 = "Fake Instant floor"; 2 = "silent";}
        //$Arg2Default 0

		//$Arg3 "Special Activation"
        //$Arg3Type 11
        //$Arg3Enum { 0 = "once on item spawn"; 1 = "once on item pickup"; 2 = "every item spawn"; 3 = "every item death";}
        //$Arg3Default 1
		
		//$Arg4 "Action tid"
        //$Arg4Type 14
        //$Arg4Default 0
	}
	Override string SpawnWhat()
	{
		args[0] %= 38;
		args[1] %= 13;
		if(user_SpawnType.CodePointCount())
			return user_SpawnType;
		else if(args[1])
			return ITEM_TYPES_SKP[args[1]];
		else
			return ITEM_TYPES_RETAIL[args[0]];
		return "";
	}
	states
	{
		spawn:
		activate:
		deactivate:
			ACTN I 1;
			wait;
	}
}

class skp_SpawnVend : actor
{
	default
	{
		//$Category Switches
		radius 24;
		height 56;
		+SOLID;
		+USESPECIAL;
		Activation THINGSPEC_Switch;
		ActiveSound "switches/normbutn";
	}
	DropItem di;
	Override void PostBeginPlay()
	{
		special = 0;
		Super.PostBeginPlay();
	}
	Override void Activate(Actor activator)
	{
		if(!activator)
			return;
		if(activator is "skp_DoomPlayer")
			skp_DoomPlayer(activator).LastVend = self;
		Menu.SetMenu('VendSpawnerMenu');
	}
	Override void Deactivate (Actor activator)
	{
		if(!activator)
			return;
		Activate(activator);
	}
	Override void Tick()
	{
		super.Tick();
		if(CurSector.lightlevel < 160)
			self.LightLevel = 160;
		else
			self.LightLevel = CurSector.lightlevel;
	}
	void VendSpawn(name WhatToSpawn)
	{
		ActorIterator it = level.CreateActorIterator(self.args[0]);
		Actor mo;
		do
		{
			mo = it.Next();
			if(mo)
			{
				actor.Spawn(WhatToSpawn, mo.pos);
				actor.Spawn("TeleportFog", mo.pos);
			}
		}
		while(mo)
	}
	States
	{
		Spawn:
			SVND A -1;
			Stop;
	}
}

extend class skp_DoomPlayer
{
	skp_SpawnVend LastVend;
}

enum VendTypes
{
	VEND_RETAIL_AMMO = -1,
	VEND_RETAIL_HEALTH = -2,
	VEND_RETAIL_ARMOR = -3,
	VEND_RETAIL_POWERUP = -4,
	VEND_RETAIL_KEYS = -5,
	VEND_LOR_ITEM = -6,
    VEND_SKP_ITEM = -7,
	VEND_RETAIL_WEAPON = -8,
	VEND_LOR_WEAPON = -9,
	VEND_SKP_WEAPON = -10,
	VEND_RETAIL_ENEMY = -11,
	VEND_LOR_ENEMY = -12,
	VEND_SKP_ENEMY = -13,
	VEND_MISC = -14,
	VEND_NONE = -40000,
	VEND_DESC = -40001
}

extend class skp_SpawnVend
{
	Default
	{
		DropItem "SKP_JumpBoots_Perm", VEND_SKP_ITEM;
		DropItem "SKP_JumpBoots", VEND_SKP_ITEM;
		DropItem "PurpleCard", VEND_SKP_ITEM;
		DropItem "skp_GreenSkull", VEND_SKP_ITEM;
		DropItem "skp_SawFuel", VEND_SKP_ITEM;
		DropItem "SKP_RedArmor", VEND_SKP_ITEM;
		DropItem "SKP_GreenBoots", VEND_SKP_ITEM;//armor
		DropItem "MiniStimpack", VEND_SKP_ITEM;//health
		DropItem "SKP_HealthMegaBonus", VEND_SKP_ITEM;

		DropItem "skp_unmaker", VEND_SKP_WEAPON;

		DropItem "skp_HeatBlade", VEND_LOR_WEAPON;
		DropItem "skp_Incinerator", VEND_LOR_WEAPON;

		DropItem "SKP_JumpBoots_Perm", VEND_RETAIL_POWERUP;
		DropItem "SKP_JumpBoots", VEND_RETAIL_POWERUP;
		DropItem "skp_RadSuit", VEND_RETAIL_POWERUP;
		DropItem "skp_Infrared", VEND_RETAIL_POWERUP;
		DropItem "skp_Berserk", VEND_RETAIL_POWERUP;
		DropItem "skp_Allmap", VEND_RETAIL_POWERUP;
		DropItem "skp_SoulSphere", VEND_RETAIL_POWERUP;
		DropItem "skp_Megasphere", VEND_RETAIL_POWERUP;
		DropItem "skp_InvulnerabilitySphere", VEND_RETAIL_POWERUP;
		DropItem "skp_BlurSphere", VEND_RETAIL_POWERUP;

		DropItem "skp_GreenSkull", VEND_RETAIL_KEYS;//keys
		DropItem "skp_YellowSkull", VEND_RETAIL_KEYS;
		DropItem "skp_RedSkull", VEND_RETAIL_KEYS;
		DropItem "skp_BlueSkull", VEND_RETAIL_KEYS;
		DropItem "PurpleCard", VEND_RETAIL_KEYS;
		DropItem "skp_YellowCard", VEND_RETAIL_KEYS;
		DropItem "skp_RedCard", VEND_RETAIL_KEYS;
		DropItem "skp_BlueCard", VEND_RETAIL_KEYS;//keys

		DropItem "skp_unmaker", VEND_RETAIL_WEAPON;
		DropItem "skp_HeatBlade", VEND_RETAIL_WEAPON;
		DropItem "skp_BFG9000", VEND_RETAIL_WEAPON;
		DropItem "skp_Incinerator", VEND_RETAIL_WEAPON;
		DropItem "skp_PlasmaRifle", VEND_RETAIL_WEAPON;
		DropItem "skp_RocketLauncher", VEND_RETAIL_WEAPON;
		DropItem "skp_Chaingun", VEND_RETAIL_WEAPON;
		DropItem "skp_SuperShotgun", VEND_RETAIL_WEAPON;
		DropItem "skp_Shotgun", VEND_RETAIL_WEAPON;
		DropItem "skp_Pistol", VEND_RETAIL_WEAPON;
		DropItem "skp_Chainsaw", VEND_RETAIL_WEAPON;//weapons

		DropItem "ThriftyBackpack", VEND_RETAIL_AMMO;
		DropItem "skp_SawFuel", VEND_RETAIL_AMMO;//ammo
		DropItem "skp_CellPack", VEND_RETAIL_AMMO;
		DropItem "skp_Cell", VEND_RETAIL_AMMO;
		DropItem "skp_RocketBox", VEND_RETAIL_AMMO;
		DropItem "skp_RocketAmmo", VEND_RETAIL_AMMO;
		DropItem "skp_ShellBox", VEND_RETAIL_AMMO;
		DropItem "skp_Shell", VEND_RETAIL_AMMO;
		DropItem "skp_ClipBox", VEND_RETAIL_AMMO;
		DropItem "skp_Clip", VEND_RETAIL_AMMO;//ammo

		DropItem "SKP_RedArmor", VEND_RETAIL_ARMOR;
		DropItem "skpBlueArmor", VEND_RETAIL_ARMOR;
		DropItem "skpGreenArmor", VEND_RETAIL_ARMOR;
		DropItem "SKP_GreenBoots", VEND_RETAIL_ARMOR;//armor
		DropItem "skpArmorBonus", VEND_RETAIL_ARMOR;//armor

		DropItem "skp_Megasphere", VEND_RETAIL_HEALTH;
		DropItem "skp_SoulSphere", VEND_RETAIL_HEALTH;
		DropItem "skp_Berserk", VEND_RETAIL_HEALTH;
		DropItem "skp_Medikit", VEND_RETAIL_HEALTH;
		DropItem "skp_Stimpack", VEND_RETAIL_HEALTH;
		DropItem "MiniStimpack", VEND_RETAIL_HEALTH;//health
		DropItem "SKP_HealthMegaBonus", VEND_RETAIL_HEALTH;
		DropItem "skp_HealthBonus", VEND_RETAIL_HEALTH;//health
		//misc
		DropItem "skp_ExplosiveBarrel", VEND_MISC;
		//skp enemies
		DropItem "GoreNest", VEND_MISC;
		DropItem "Cacomera", VEND_SKP_ENEMY;
		DropItem "ZombieSS", VEND_SKP_ENEMY;
		DropItem "Shadow", VEND_SKP_ENEMY;
		DropItem "DemonDog", VEND_SKP_ENEMY;
		//LoR enemies
		DropItem "skp_Ghoul", VEND_LOR_ENEMY;
		//retail enemies
		DropItem "SKP_WolfensteinSS", VEND_RETAIL_ENEMY;
		DropItem "skp_SpiderMastermind", VEND_RETAIL_ENEMY;
		DropItem "skp_Cyberdemon", VEND_RETAIL_ENEMY;
		DropItem "skp_BaronOfHell", VEND_RETAIL_ENEMY;
		DropItem "skp_Knight", VEND_RETAIL_ENEMY;
		DropItem "skp_Archvile", VEND_RETAIL_ENEMY;
		DropItem "skp_Arachnotron", VEND_RETAIL_ENEMY;
		DropItem "skp_mancubus", VEND_RETAIL_ENEMY;
		DropItem "skp_Revenant", VEND_RETAIL_ENEMY;
		DropItem "skp_PainElemental", VEND_RETAIL_ENEMY;
		DropItem "skp_Cacodemon", VEND_RETAIL_ENEMY;
		DropItem "skp_ChaingunGuy", VEND_RETAIL_ENEMY;
		DropItem "skp_LostSoul", VEND_RETAIL_ENEMY;
		DropItem "skp_Spectre", VEND_RETAIL_ENEMY;
		DropItem "skp_Demon", VEND_RETAIL_ENEMY;
		DropItem "skp_DoomImp", VEND_RETAIL_ENEMY;
		DropItem "skp_ShotgunGuy", VEND_RETAIL_ENEMY;
		DropItem "skp_ZombieMan", VEND_RETAIL_ENEMY;
	}
}